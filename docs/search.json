[
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "VS Frisbie, H Hashimoto, Y Xie, FNDL Vitorino, J Baeza, T Nguyen, Z Yuan, J Kiselar, BA Garcia, EW Debler, (2024). Two DOT1 enzymes cooperatively mediate efficient ubiquitin-independent histone H3 lysine 76 tri-methylation in kinetoplastids. Nature Communications, 15 (1), 2467. https://www.nature.com/articles/s41467-024-46637-6\nJ Baeza, BE Coons, Z Lin, J Riley, M Mendoza, WH Peranteau, BA Garcia, (2024). In utero pulse injection of isotopic amino acids quantifies protein turnover rates during murine fetal development. Cell Reports Methods, 4 (2). https://www.cell.com/cell-reports-methods/pdf/S2667-2375(24)00028-6.pdf\nN Dasgupta, X Lei, R Arnold, MG Teneche, KN Miller, A Rajesh, A Davis, V Anschau, AR Campos, R Gilson, A Havas, S Yin, ZM Chua, J Proulx, M Alcaraz, MI Rather, J Baeza, DC Schultz, SL Berger, PD Adams, (2023). Histone chaperone HIRA, Promyelocytic Leukemia (PML) protein and p62/SQSTM1 coordinate to regulate inflammation during cell senescence and aging.. bioRxiv, 2023.06. 24.546372. https://www.biorxiv.org/content/10.1101/2023.06.24.546372.abstract\nLK Pino, J Baeza, R Lauman, B Schilling, BA Garcia, (2021). Improved SILAC quantification with data-independent acquisition to investigate bortezomib-induced protein degradation. Journal of proteome research, 20 (4), 1918-1927. https://pubs.acs.org/doi/abs/10.1021/acs.jproteome.0c00938\nL Narapareddy, EA Rhon-Calderon, LA Vrooman, J Baeza, DK Nguyen, C Mesaros, Y Lan, BA Garcia, RM Schultz, MS Bartolomei, (2021). Sex-specific effects of in vitro fertilization on adult metabolic outcomes and hepatic transcriptome and proteome in mouse. FASEB journal: official publication of the Federation of American Societies …, . https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8132511/\nP Latorre-Muro, J Baeza, R Hurtado-Guerrero, T Hicks, I Delso, C Hernández-Ruiz, A Velázquez-Campoy, AJ Lawton, Jús Angulo, JM Denu, JéA Carrodeguas, (2021). Self-acetylation at the active site of phosphoenolpyruvate carboxykinase (PCK1) controls enzyme activity. Journal of Biological Chemistry, 296. https://www.jbc.org/article/S0021-9258(20)00201-X/abstract\nJ Baeza, AJ Lawton, J Fan, MJ Smallegan, I Lienert, T Gandhi, OM Bernhardt, L Reiter, JM Denu, (2020). Revealing dynamic protein acetylation across subcellular compartments. Journal of proteome research, 19 (6), 2404-2418. https://pubs.acs.org/doi/abs/10.1021/acs.jproteome.0c00088\nL Narapareddy, EA Rhon-Calderon, LA Vrooman, J Baeza, DK Nguyen, Y Lan, BA Garcia, RM Schultz, MS Bartolomei, (2020). Sex-specific effects of in vitro fertilization on adult metabolic phenotypes and hepatic transcriptomic and proteomic pathways in mouse. bioRxiv, 2020.09. 23.309989. https://www.biorxiv.org/content/10.1101/2020.09.23.309989.abstract\nX Lan, E Khandros, P Huang, SA Peslak, SK Bhardwaj, JD Grevet, O Abdulmalik, H Wang, CA Keller, B Giardine, J Baeza, ER Duffner, OE Demerdash, XS Wu, CR Vakoc, BA Garcia, RC Hardison, J Shi, GA Blobel, (2019). The E3 ligase adaptor molecule SPOP regulates fetal hemoglobin levels in adult erythroid cells. Blood Advances, 3 (10), 1586-1597. https://ashpublications.org/bloodadvances/article-abstract/3/10/1586/246655\nLM Agosto, MR Gazzara, CM Radens, S Sidoli, J Baeza, BA Garcia, KW Lynch, (2019). Deep profiling and custom databases improve detection of proteoforms generated by alternative splicing. Genome research, 29 (12), 2046-2055. https://genome.cshlp.org/content/29/12/2046.short\nAJ Lindahl, AJ Lawton, J Baeza, JA Dowell, JM Denu, (2019). Site-specific lysine acetylation stoichiometry across subcellular compartments. Protein Acetylation: Methods and Protocols, 79-106. https://link.springer.com/protocol/10.1007/978-1-4939-9434-2_6\nP Latorre-Muro, J Baeza, EA Armstrong, R Hurtado-Guerrero, F Corzana, LE Wu, DA Sinclair, P Lopez-Buesa, JA Carrodeguas, JM Denu, (2018). Dynamic acetylation of phosphoenolpyruvate carboxykinase toggles enzyme activity between gluconeogenic and anaplerotic reactions. Molecular cell, 71 (5), 718-732. e9. https://www.cell.com/molecular-cell/pdf/S1097-2765(18)30600-2.pdf\nJ Baeza, AJ Lawton, J Fan, MJ Smallegan, I Lienert, T Gandhi, OM Bernhardt, L Reiter, JM Denu, AG Biognosys, (2018). Quantifying dynamic protein acetylation using quantitative stoichiometry. bioRxiv, 472530. https://www.biorxiv.org/content/10.1101/472530v3\nI Galleano, J Nielsen, AS Madsen, CA Olsen, (2017). Scalable and purification-free synthesis of a myristoylated fluorogenic sirtuin substrate. Synlett, 28 (16), 2169-2173. https://www.thieme-connect.com/products/ejournals/html/10.1055/s-0036-1588875\nJ Baeza, MJ Smallegan, JM Denu, (2016). Mechanisms and dynamics of protein acetylation in mitochondria. Trends in biochemical sciences, 41 (3), 231-244. https://www.cell.com/trends/biochemical-sciences/fulltext/S0968-0004(15)00256-X\nJ Fan, J Baeza, JM Denu, (2016). Investigating histone acetylation stoichiometry and turnover rate. Methods in Enzymology, 574, 125-148. https://www.sciencedirect.com/science/article/pii/S0076687916000203\nJ Baeza, MJ Smallegan, JM Denu, (2015). Site-specific reactivity of nonenzymatic lysine acetylation. ACS chemical biology, 10 (1), 122-128. https://pubs.acs.org/doi/abs/10.1021/cb500848p\nJ Baeza, JA Dowell, MJ Smallegan, J Fan, D Amador-Noguez, Z Khan, JM Denu, (2014). Stoichiometry of Site-specific Lysine Acetylation in an Entire Proteome♦. Journal of Biological Chemistry, 289 (31), 21326-21338. https://www.jbc.org/article/S0021-9258(20)47518-0/abstract\nJL Feldman, J Baeza, JM Denu, (2013). Activation of the Protein Deacetylase SIRT6 by Long-chain Fatty Acids and Widespread Deacylation by Mammalian Sirtuins♦. Journal of Biological Chemistry, 288 (43), 31350-31356. https://www.jbc.org/article/S0021-9258(20)48735-6/abstract\nJY Ho, NJ Cira, JA Crooks, J Baeza, DB Weibel, (2012). Rapid identification of ESKAPE bacterial strains using an autonomous microfluidic device. PLoS One, 7 (7), e41245. https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0041245\nX Zhang, M Daucher, J Baeza, C‐W Kim, R Russell, S Kottilil, (2012). Human immunodeficiency virus enhances hepatitis C virus replication by differential regulation of IFN and TGF family genes. Journal of medical virology, 84 (9), 1344-1352. https://onlinelibrary.wiley.com/doi/abs/10.1002/jmv.23315\n\n♦ This article was selected as a Paper of the Week."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Josue Baeza",
    "section": "",
    "text": "About me\nI’m an analytical biochemist working in biopharm drug development. This means that I use mass spectrometry-based techniques to understand the chemical structure of proteins in the pharmaceutical industry.\nMy PhD and Postdoctoral training was focused on using high-resolution mass spectrometry to address structural, biochemical, and biological questions.\nI’m also a self-taught data scientist. This came out of a necessity to understand and interpret the large data generated by mass spectrometry-based proteomics.\nOutside the lab, I love to spend time with my family and enjoy a backyard barbeque.\n\n\n\nInterests\n\nMass Spectrometry\nProteomics\nData Analysis in R\nReproducible Research\nBBQ\n\n\n\n\nEducation\n\nPhD in Biomolecular Chemistry - University of Wisconsin-Madison\nBS in Biology - University of Texas Permian Basin"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 2\n\n[1] 3"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Processing Thermo Log files\n\n\n\n\n\n\n\nMass Spectrometry\n\n\nThermo\n\n\nOrbitrap\n\n\nLog files\n\n\n\n\n\n\n\n\n\n\n\nJun 6, 2024\n\n\nJosue Baeza\n\n\n\n\n\n\n  \n\n\n\n\nMy First Blog Post\n\n\n\n\n\n\n\nQuarto\n\n\nR\n\n\n\n\nI created a website. Now, let me blog about it!\n\n\n\n\n\n\nNov 29, 2023\n\n\nJosue Baeza\n\n\n\n\n\n\n  \n\n\n\n\nUnderstanding “forbidden zones”\n\n\n\n\n\n\n\nMass Spectrometry\n\n\nDIA\n\n\nSkyline\n\n\n\n\n\n\n\n\n\n\n\nNov 29, 2023\n\n\nJosue Baeza\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/20231129-my-first-blog/index.html",
    "href": "posts/20231129-my-first-blog/index.html",
    "title": "My First Blog Post",
    "section": "",
    "text": "For the past two years, I’ve been talking about starting a personal wesbite. This past week, I finally did by following this tutorial\nTo add a blog to the new website, I followed much of the information found in this post\nVoila, a new website.\nNow to include some executable code…\n\n\nCode\niris %&gt;% \n  ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +\n  geom_point() +\n  theme_classic(base_size = 18) +\n  coord_fixed()"
  },
  {
    "objectID": "projects.html#project-2",
    "href": "projects.html#project-2",
    "title": "Projects",
    "section": "Project 2",
    "text": "Project 2"
  },
  {
    "objectID": "projects.html#project-3",
    "href": "projects.html#project-3",
    "title": "Projects",
    "section": "Project 3",
    "text": "Project 3"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html",
    "href": "posts/20231203-dia-window-optimization/index.html",
    "title": "Understanding “forbidden zones”",
    "section": "",
    "text": "What are “forbidden zones” when working with mass spectrometry-based data. Forbidden zones, described in Frahm et. al. (2006), are the areas in the precursor mass range where peptides are not found. A more recent publication describing forbidden zones for DIA method development can be found in Pino et. al. (2020).\n\n\n\nForbidden Zones described in Pino et.al. (2020)\n\n\nThe “optimize window placement” feature in Skyline is there to place the boundaries of DIA windows in these forbidden zones.\n\n\n\nSkyline Screenshot\n\n\nThis blog post aims to understand DIA methods, window placement, and forbidden zones."
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#importing-data",
    "href": "posts/20231203-dia-window-optimization/index.html#importing-data",
    "title": "Understanding “forbidden zones”",
    "section": "Importing data",
    "text": "Importing data\n\nHuman fasta file\nAcetyl Spectral library (from Baeza et.al. 2020)\nPrecursor isolation windows\n\nWe’re going to analyze three data sets. The first is an in silico digest of the human proteome. The second is an in silico digest of the human proteome with acetyl-lysine (AcK) modifications present. The third is a spectral library from Baeza et. al.\n\nGlobal functions\n\n\nCode\n# Digesting protein\ndigest_argc &lt;- function(sequence){\n  tryCatch(\n    digest_aa_sequence(sequence, enzyme = \"arg.c\", missed = 0)$peptide,\n    error = function(e) NA,\n    warning = function(w) NA\n    )\n}\n\n# Digesting protein\ndigest_tryp &lt;- function(sequence){\n  tryCatch(\n    digest_aa_sequence(sequence, enzyme = \"trypsin\", missed = 0)$peptide,\n    error = function(e) NA,\n    warning = function(w) NA\n    )\n}"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#setting-global-variables",
    "href": "posts/20231203-dia-window-optimization/index.html#setting-global-variables",
    "title": "Understanding “forbidden zones”",
    "section": "Setting global variables",
    "text": "Setting global variables\n\n# Minimum peptide length\nmin_pep_len &lt;- 7\n\n# Mass of Proton (Da)\nproton &lt;- 1.007276466\n\n# Acetylation mass (Da)\nack_d0_mass &lt;- 42.010565\nack_d3_mass &lt;- ack_d0_mass - 3*(1.007825) + 3*(2.014102) \n\n# for the mz distribution\nmin_mz &lt;- 300\nmax_mz &lt;- 2500\n\n# for zooming in the mz distribution\nmz1 &lt;- 640\nmz2 &lt;- 650"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#in-silico-digest-of-the-human-proteome",
    "href": "posts/20231203-dia-window-optimization/index.html#in-silico-digest-of-the-human-proteome",
    "title": "Understanding “forbidden zones”",
    "section": "In-silico digest of the human proteome",
    "text": "In-silico digest of the human proteome\nThe first step is to perform an in silico digest of the complete human fasta file using trypsin cleavage rules. This is a list of all possible tryptic peptides with a charge state of 2 or 3 and at least 7 amino acid residues.\n\n\nCode\n# Digesting human proteome\n# filtering for a minimum peptide length\nhu_prot &lt;- hu_fasta %&gt;% \n  mutate(peptide = map(ProteinSequence, digest_tryp)) %&gt;% # digesting proteome TAKES A LONG TIME!\n  unnest(peptide) %&gt;% \n  select(-ProteinSequence) %&gt;% \n  mutate(pep_len = nchar(peptide)) %&gt;% # Counting peptide length\n  filter(pep_len &gt;= min_pep_len) # Filtering for peptide size\n\n# Calculating monoisotopic mass\n# All lysines have acetyl modification\nhu_prot &lt;- hu_prot %&gt;% \n  mutate(monoisotopic_mass = calculate_monoisotopic_mass(peptide, IAA = TRUE, AcK = FALSE))\n\n# Calculating most likely charge state based on R|H + 1\nhu_prot$z &lt;- sapply(hu_prot$peptide, function(x){\n  length(unlist(gregexpr(\"K|R|H\", x))) + 1 # For N-terminus\n})\n\n# calculating precursor m/z\n# assuming z=2; z=3\nhu_prot &lt;- hu_prot %&gt;% \n  filter(z == 2 | z == 3) %&gt;% \n  mutate(precursor_mz = (monoisotopic_mass + (z * proton)) / z)"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#in-silico-digest-of-the-acetyl-proteome",
    "href": "posts/20231203-dia-window-optimization/index.html#in-silico-digest-of-the-acetyl-proteome",
    "title": "Understanding “forbidden zones”",
    "section": "In-silico digest of the acetyl proteome",
    "text": "In-silico digest of the acetyl proteome\nIn this step, I am adding an acetyl modification to every lysine residue and digesting the complete human proteome using the Arg-C digest rules. Acetylation on lysine residues prevents the proteolytic digestion by trypsin. Therefore only the arginine residues are used for digestion.\nTo generate in silico AcK peptides, I change the digestion rule from trypsin to ArgC. Trypsin cleaves at K and R residues, while ArgC cleaves at R residues only. Then, the mass of 42.010565 and 45.029396 is added for light and heavy AcK peptides, respectively.\n\n\nCode\n# Digesting human proteome\n# Filtering for lysine containing peptides\n# filtering for a minimum peptide length\nhu_acetyl &lt;- hu_fasta %&gt;% \n  mutate(peptide = map(ProteinSequence, digest_argc)) %&gt;% \n  unnest(peptide) %&gt;% \n  select(-ProteinSequence) %&gt;% \n  mutate(k_count = str_count(peptide, \"K\"),\n         pep_len = nchar(peptide)) %&gt;% \n  filter(k_count &gt; 0,\n         pep_len &gt;= min_pep_len)\n\n# Calculating monoisotopic mass\n# All lysines have acetyl modification - either light (non-isotopic) or D3-Acetyl\nhu_acetyl &lt;- hu_acetyl %&gt;% \n  mutate(Ack_D0 = calculate_monoisotopic_mass(peptide, IAA = TRUE, AcK = TRUE),\n         AcK_D3 = Ack_D0 - k_count*ack_d0_mass + k_count*ack_d3_mass) %&gt;% \n  gather(isotope, monoisotopic_mass, Ack_D0, AcK_D3)\n\n# Calculating most likely charge state based on R|H + 1\nhu_acetyl$z &lt;- sapply(hu_acetyl$peptide, function(x){\n  length(unlist(gregexpr(\"R|H\", x))) + 1 # for n-terminus\n})\n\n# calculating precursor m/z\n# assuming z=2; z=3\nhu_acetyl &lt;- hu_acetyl %&gt;% \n  filter(z == 2 | z == 3) %&gt;% \n  mutate(precursor_mz = (monoisotopic_mass + (z * proton)) / z)"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#acetyl-spectral-library-cleaning",
    "href": "posts/20231203-dia-window-optimization/index.html#acetyl-spectral-library-cleaning",
    "title": "Understanding “forbidden zones”",
    "section": "Acetyl spectral library cleaning",
    "text": "Acetyl spectral library cleaning\nI have a spectral library that was published in Baeza et.al. 2020. I will also use this spectral library to compare with the human proteome analysis. As a clean up step, I am filtering only for peptides that are acetylated, i.e., contain a lysine residue.\n\n\nCode\n# Filtering for acetyl peptide\nack_speclib &lt;- ack_speclib %&gt;% \n  mutate(acetyl = str_detect(ModifiedPeptide, \"Acetyl \\\\(K\"),\n         heavy = str_detect(LabeledPeptide, \"Acetyl D3\")) %&gt;% \n  filter(acetyl == TRUE)\n\n# Removing duplicate entries\nack_speclib &lt;- ack_speclib %&gt;% \n  select(PrecursorCharge, PrecursorMz, StrippedPeptide, ModifiedPeptide, LabeledPeptide,\n         ProteinGroups, acetyl, heavy) %&gt;% \n  distinct()"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#mz-distribution",
    "href": "posts/20231203-dia-window-optimization/index.html#mz-distribution",
    "title": "Understanding “forbidden zones”",
    "section": "mz distribution",
    "text": "mz distribution\n\nTryptic digest\nPlotting the m/z distribution for tryptic peptide precursors\n\n\nCode\nggplot(hu_prot %&gt;% filter(precursor_mz &gt; min_mz, precursor_mz &lt; max_mz),\n       aes(x = precursor_mz)) +\n  geom_histogram(position = \"dodge\", binwidth = 10, color = \"black\", fill = \"grey80\") +\n  # annotate(\"rect\", xmin = mz1, xmax = mz2, ymin = 0, ymax = Inf) +\n  scale_x_continuous(n.breaks = 15) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme_bw(base_size = 14) +\n  labs(title = \"Peptide m/z distribution\",\n       subtitle = \"Tryptic Proteome\",\n       y = \"Number of precursors\",\n       x = \"Precursor m/z\")\n\n\n\n\n\n\n\nAcK peptides\nPlotting the m/z distribution for Acetyl-K peptide precursors. Here, I’m restricting the peptides that have either 1 or 2 lysines.\n\n\nCode\nggplot(hu_acetyl %&gt;% filter(precursor_mz &gt; min_mz, precursor_mz &lt; max_mz, k_count &lt;= 2),\n       aes(x = precursor_mz)) +\n  geom_histogram(position = \"dodge\", binwidth = 10, color = \"black\", fill = \"grey80\") +\n  scale_x_continuous(n.breaks = 15) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme_bw(base_size = 14) +\n  labs(title = \"Peptide m/z distribution\",\n       subtitle = \"Acetyl Proteome\",\n       y = \"Number of precursors\",\n       x = \"Precursor m/z\")"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#dia-window-placement",
    "href": "posts/20231203-dia-window-optimization/index.html#dia-window-placement",
    "title": "Understanding “forbidden zones”",
    "section": "DIA Window placement",
    "text": "DIA Window placement\nNext, we will zoom in to the m/z distribution between 640 and 650 and add the optimized-window-placement windows\n\n\nCode\n# Human proteome (Trypsin)\ng1 &lt;- ggplot(hu_prot %&gt;% filter(precursor_mz &gt;= mz1 & precursor_mz &lt;= mz2)) +\n  geom_histogram(aes(x = precursor_mz), binwidth = 0.025, color = \"black\", fill = \"grey80\") +\n  geom_vline(data = optimal_windows_proteome %&gt;% filter(start_mz &gt;= mz1 & start_mz &lt;= mz2), \n             aes(xintercept = start_mz), color = \"black\", linewidth = 1) +\n  theme_bw(base_size = 22) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Tryptic Proteome\",\n         subtitle = \"in silico digest\",\n         x = \"Precursor m/z\")\n\n# Acetyl proteome (Arg-C)\ng2 &lt;- ggplot(hu_acetyl %&gt;% filter(precursor_mz &gt;= mz1 & precursor_mz &lt;= mz2)) +\n  geom_histogram(aes(x = precursor_mz, fill = isotope), binwidth = 0.025, color = \"black\") +\n  geom_vline(data = optimal_windows_proteome %&gt;% filter(start_mz &gt;= mz1 & start_mz &lt;= mz2), \n             aes(xintercept = start_mz), color = \"black\", linewidth = 1) +\n  theme_bw(base_size = 22) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Acetyl Proteome\",\n         subtitle = \"in silico digest\",\n         x = \"Precursor m/z\")\n\n# Acetyl Spectral library\ng3 &lt;- ggplot(ack_speclib %&gt;% filter(PrecursorMz &gt;= mz1 & PrecursorMz &lt;= mz2, PrecursorCharge &lt; 4)) +\n  geom_histogram(aes(x = PrecursorMz), binwidth = 0.025, fill = \"#2b8cbe\", color = \"black\") +\n  geom_vline(data = optimal_windows_proteome %&gt;% filter(start_mz &gt;= mz1 & start_mz &lt;= mz2), \n             aes(xintercept = start_mz), color = \"black\", linewidth = 1) +\n  theme_bw(base_size = 22) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Acetyl Spectral library\",\n         subtitle = \"Baeza et.al. JPR 2020\",\n         fill = \"Charge\",\n         x = \"Precursor m/z\")\n\n# Rendering all three plots\ng1 / g2 / g3"
  },
  {
    "objectID": "posts/20231203-dia-window-optimization/index.html#conclusion",
    "href": "posts/20231203-dia-window-optimization/index.html#conclusion",
    "title": "Understanding “forbidden zones”",
    "section": "Conclusion",
    "text": "Conclusion\nSo, the optimized window placement function places the DIA windows within areas of the m/z space where monoisotopic peaks are not to be found. This works for acetyl-lysine peptides as well as deuterated acetyl-lysines as described in Baeza et. al."
  },
  {
    "objectID": "posts/20240616-thermo-log-files/index.html",
    "href": "posts/20240616-thermo-log-files/index.html",
    "title": "Processing Thermo Log files",
    "section": "",
    "text": "Thermo mass spectrometers record daily log files that contain a lot of valuable information regarding the status of each instrument. The log files record data for temperature, pressure, voltages, etc. from numerous guages. Visualizing this data longitudinally can help assess instrument performance.\nIn this blog post, I will show you were to find the log files, how to import them, and how to visualize.\n\n\n\nQ-Exactive family instruments\nExploris family instruments\n\nNote: Orbitrap Eclipse instruments do generate log files, however, this blog post will only focus on the instruments above because I don’t have access to Eclipse log files\n\n\n\nData is located in the following directories for the different instruments\n\n\nC:\\ProgramData\\Thermo\\Exactive\\Log\n\n\n\nC:\\ProgramData\\Thermo\\Exploris\\Log\n\n\n\nC:\\Thermo\\Instruments\\TNG\\OrbitrapXXXXX\\X.X\\System\\logs"
  },
  {
    "objectID": "posts/20240616-thermo-log-files/index.html#background",
    "href": "posts/20240616-thermo-log-files/index.html#background",
    "title": "Processing Thermo Log files",
    "section": "",
    "text": "Thermo mass spectrometers record daily log files that contain a lot of valuable information regarding the status of each instrument. The log files record data for temperature, pressure, voltages, etc. from numerous guages. Visualizing this data longitudinally can help assess instrument performance.\nIn this blog post, I will show you were to find the log files, how to import them, and how to visualize.\n\n\n\nQ-Exactive family instruments\nExploris family instruments\n\nNote: Orbitrap Eclipse instruments do generate log files, however, this blog post will only focus on the instruments above because I don’t have access to Eclipse log files\n\n\n\nData is located in the following directories for the different instruments\n\n\nC:\\ProgramData\\Thermo\\Exactive\\Log\n\n\n\nC:\\ProgramData\\Thermo\\Exploris\\Log\n\n\n\nC:\\Thermo\\Instruments\\TNG\\OrbitrapXXXXX\\X.X\\System\\logs"
  },
  {
    "objectID": "posts/20240616-thermo-log-files/index.html#reading-log-files",
    "href": "posts/20240616-thermo-log-files/index.html#reading-log-files",
    "title": "Processing Thermo Log files",
    "section": "Reading Log files",
    "text": "Reading Log files\n\nLibraries used\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(kableExtra)\n\n\n# directory where I keep the log files\ndirectory &lt;- \"QEHF_logfiles/\"\n\n# Reading the log files in the directory\nfilelist &lt;- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# plucking a single log file to demonstrate\nfile &lt;- filelist[1]\n\n\n\nImporting a single file\n\nlogfile &lt;- read.delim2(file, sep = \"\\t\", header = FALSE)\n\nDuring the file import, I’m using header = FALSE. The instrument log files do not always have the first row with the header information.\nAdditionally, the header row is often embedded multiple times in a single log file. Scroll down and see how many times this log file has the header information. This will need to be cleaned up in subsequent steps.\n\n\n\n\n\n\nV1\nV2\nV3\nV4\nV5\nV6\nV7\n\n\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472717488\n2016-09-01 08:10:49\n0.696261574074\n3.15903902133e-09\n9.08652659437e-10\n1.94529413747\n0.00318003167635\n\n\n1472718388\n2016-09-01 08:25:49\n0.706678240741\n3.15903902133e-09\n9.08652659437e-10\n1.93167114622\n0.00311368869796\n\n\n1472719288\n2016-09-01 08:40:49\n0.717094907407\n3.15903902133e-09\n9.08652659437e-10\n1.93167114622\n0.00322504379452\n\n\n1472720188\n2016-09-01 08:55:50\n0.727511574074\n3.15903902133e-09\n8.7728322682e-10\n1.91814355746\n0.00684082905672\n\n\n1472721088\n2016-09-01 09:10:49\n0.737928240741\n3.13692038539e-09\n8.46996761706e-10\n1.93167114622\n0.00669811319081\n\n\n1472721988\n2016-09-01 09:25:49\n0.748333333333\n3.15903902133e-09\n8.24970070541e-10\n1.91814355746\n0.0072874821726\n\n\n1472722888\n2016-09-01 09:40:49\n0.758761574074\n3.13692038539e-09\n8.03516197533e-10\n1.93167114622\n0.00809764594458\n\n\n1472723788\n2016-09-01 09:55:50\n0.769166666667\n3.13692038539e-09\n7.82620246179e-10\n1.93167114622\n0.00965296908481\n\n\n1472724688\n2016-09-01 10:10:49\n0.779594907407\n3.11495661746e-09\n7.6899238779e-10\n1.93167114622\n0.00912523869282\n\n\n1472725588\n2016-09-01 10:25:49\n0.79\n3.13692038539e-09\n7.55601832902e-10\n1.93167114622\n0.0106509932333\n\n\n1472726488\n2016-09-01 10:40:49\n0.800416666667\n3.13692038539e-09\n7.55601832902e-10\n1.93167114622\n0.0105764037999\n\n\n1472727388\n2016-09-01 10:55:50\n0.810833333333\n3.15903902133e-09\n7.42444449322e-10\n1.91814355746\n0.00965296908481\n\n\n1472728288\n2016-09-01 11:10:49\n0.82125\n3.13692038539e-09\n7.29516176808e-10\n1.94529413747\n0.00958536886394\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472739175\n2016-09-01 14:12:11\n0.947233796296\n3.15903902133e-09\n1.04575561764e-09\n1.95901320402\n0.00827018148107\n\n\n1472740075\n2016-09-01 14:27:16\n0.957650462963\n7.61202696136e-05\n1.34912210331e-09\n1.56448223228\n0.0068890735804\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472740659\n2016-09-01 14:36:55\n0.964421296296\n3.82343674603e-05\n1.06428819311e-09\n1.6318609378\n0.008748462243\n\n\n1472741559\n2016-09-01 14:51:59\n0.974826388889\n3.20374527283e-09\n1.05498121156e-09\n1.48938178622\n0.00744275565021\n\n\n1472742459\n2016-09-01 15:07:00\n0.98525462963\n3.15903902133e-09\n1.05498121156e-09\n1.48938178622\n0.00684082905672\n\n\n1472743359\n2016-09-01 15:21:59\n0.995659722222\n3.13692038539e-09\n1.08314919748e-09\n1.57551564643\n0.00637658107113\n\n\n1472744262\n2016-09-01 15:37:02\n1.00611111111\n3.18131361724e-09\n1.09270467533e-09\n1.56448223228\n0.00546313597647\n\n\n1472745159\n2016-09-01 15:51:59\n1.01649305556\n3.15903902133e-09\n1.10234445105e-09\n1.52111585898\n0.00439366931872\n\n\n1472746059\n2016-09-01 16:07:00\n1.02689814815\n3.15903902133e-09\n1.1317770349e-09\n1.51046340923\n0.00376427628788\n\n\n1472746959\n2016-09-01 16:21:59\n1.03731481481\n3.13692038539e-09\n1.1619954684e-09\n1.49988555912\n0.00302737938512\n\n\n1472747861\n2016-09-01 16:36:59\n1.04775462963\n3.18131361724e-09\n1.1619954684e-09\n1.49988555912\n0.00248661450305\n\n\n1472748761\n2016-09-01 16:51:56\n1.0581712963\n3.13692038539e-09\n1.18258801255e-09\n1.52111585898\n0.00216056211893\n\n\n1472749661\n2016-09-01 17:07:00\n1.06858796296\n3.15903902133e-09\n1.19302073372e-09\n1.51046340923\n0.00199983341008\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472750010\n2016-09-01 17:12:51\n1.07263888889\n3.15903902133e-09\n1.18258801255e-09\n1.6318609378\n0.00246920061846\n\n\n1472750910\n2016-09-01 17:27:51\n1.08305555556\n3.15903902133e-09\n1.20354549174e-09\n1.49988555912\n0.00216056211893\n\n\n1472751810\n2016-09-01 17:42:51\n1.09347222222\n3.18131361724e-09\n1.19302073372e-09\n1.49988555912\n0.00210067282044\n\n\n1472752710\n2016-09-01 17:57:51\n1.10388888889\n3.13692038539e-09\n1.20354549174e-09\n1.49988555912\n0.00208596170458\n\n\n1472753610\n2016-09-01 18:12:51\n1.11429398148\n3.15903902133e-09\n1.20354549174e-09\n1.49988555912\n0.00208596170458\n\n\n1472754514\n2016-09-01 18:27:51\n1.12475694444\n3.18131361724e-09\n1.18258801255e-09\n1.48938178622\n0.00199983341008\n\n\n1472755411\n2016-09-01 18:42:48\n1.13513888889\n3.18131361724e-09\n1.18258801255e-09\n1.48938178622\n0.0106509932333\n\n\n1472756315\n2016-09-01 18:57:51\n1.14560185185\n3.15903902133e-09\n1.18258801255e-09\n1.48938178622\n0.00214543159534\n\n\n1472757212\n2016-09-01 19:12:49\n1.1559837963\n3.15903902133e-09\n1.17224652338e-09\n1.46859440062\n0.00197192162236\n\n\n1472758116\n2016-09-01 19:27:52\n1.16644675926\n3.15903902133e-09\n1.1619954684e-09\n1.47895157177\n0.00214543159534\n\n\n1472759013\n2016-09-01 19:42:49\n1.1768287037\n3.15903902133e-09\n1.19302073372e-09\n1.47895157177\n0.0020568478194\n\n\n1472759911\n2016-09-01 19:57:45\n1.18721064815\n3.15903902133e-09\n1.1518340568e-09\n1.48938178622\n0.0108017539222\n\n\n1472760814\n2016-09-01 20:12:49\n1.19767361111\n3.15903902133e-09\n1.14176150465e-09\n1.47895157177\n0.00222215883613\n\n\n1472761712\n2016-09-01 20:27:46\n1.20805555556\n3.15903902133e-09\n1.1317770349e-09\n1.47895157177\n0.00213040703156\n\n\n1472762615\n2016-09-01 20:42:55\n1.21851851852\n3.15903902133e-09\n1.14176150465e-09\n1.48938178622\n0.00235067062559\n\n\n1472763513\n2016-09-01 20:57:52\n1.22890046296\n3.18131361724e-09\n1.1317770349e-09\n1.49988555912\n0.00211548768554\n\n\n1472764416\n2016-09-01 21:12:55\n1.23936342593\n3.15903902133e-09\n1.12187987729e-09\n1.49988555912\n0.00236724858474\n\n\n1472765314\n2016-09-01 21:27:53\n1.24974537037\n3.15903902133e-09\n1.12187987729e-09\n1.48938178622\n0.00213040703156\n\n\n1472766211\n2016-09-01 21:42:50\n1.26012731481\n3.15903902133e-09\n1.11206926829e-09\n1.48938178622\n0.0105764037999\n\n\n1472767115\n2016-09-01 21:57:53\n1.27059027778\n3.11495661746e-09\n1.09270467533e-09\n1.48938178622\n0.00235067062559\n\n\n1472768012\n2016-09-01 22:12:50\n1.28097222222\n3.13692038539e-09\n1.09270467533e-09\n1.47895157177\n0.0021911440399\n\n\n1472768916\n2016-09-01 22:27:55\n1.29143518519\n3.15903902133e-09\n1.08314919748e-09\n1.48938178622\n0.00240075607267\n\n\n1472769813\n2016-09-01 22:42:53\n1.30181712963\n3.15903902133e-09\n1.08314919748e-09\n1.47895157177\n0.00222215883613\n\n\n1472770711\n2016-09-01 22:57:49\n1.31221064815\n3.15903902133e-09\n1.06428819311e-09\n1.48938178622\n0.0102832331483\n\n\n1472771614\n2016-09-01 23:12:52\n1.32266203704\n3.18131361724e-09\n1.07367728031e-09\n1.47895157177\n0.00233420876271\n\n\n1472772512\n2016-09-01 23:27:49\n1.33305555556\n3.15903902133e-09\n1.07367728031e-09\n1.46859440062\n0.00210067282044\n\n\n1472773415\n2016-09-01 23:42:53\n1.34350694444\n3.15903902133e-09\n1.05498121156e-09\n1.47895157177\n0.0022536126348\n\n\n1472774313\n2016-09-01 23:57:50\n1.35387731481\n3.15903902133e-09\n1.05498121156e-09\n1.47895157177\n0.00204244361219\n\n\n\n\n\n\n\n\n\nCleaning up header\nThese are the steps being performed in the following chunk.\n\nIndexing the rows in a single log file that contain the header-row\nRemoving Non-ASCII characters from header\nAssigning a header-row as column names\nRemoving all header-rows from log file\nCleaning up column names using the janitor package\n\n\n# Indexing the header-rows\nindex &lt;- grep(\"[a-z]\", logfile[,3])\n\n# Removing Non-ASCII characters\nlogfile[index[1],] &lt;- iconv(logfile[index[1],], \"utf-8\", \"ascii\", sub = \"\")\n\n# Assigning new column name\nnames(logfile) &lt;- logfile[index[1],]\n\n# Removing header-rows\nlogfile &lt;- logfile[-index,]\n\n# Cleaning column names\nlogfile &lt;- logfile %&gt;% clean_names(case = \"snake\") \n\n\n\nFormatting data types\nThe next step is to convert the dataframe to numeric and the date column to datetime. During the data import, the header-rows being present forced all columns to import as character type.\n\n# Creating a vector of date-time. I need to deal with this separately\ndate_column &lt;- logfile$date\n\n# Removing the date column from the data frame\nlogfile$date &lt;- NA\n\n# Need to convert the entire data frame to numeric\nlogfile &lt;- as.data.frame(sapply(logfile, FUN = as.numeric))\n\n# Now that the data frame is numeric, I can add back the date-time\nlogfile$date &lt;- date_column\n \n# Formatting date-time using lubridate\nlogfile$date &lt;- ymd_hms(logfile$date)"
  },
  {
    "objectID": "posts/20240616-thermo-log-files/index.html#putting-it-all-together",
    "href": "posts/20240616-thermo-log-files/index.html#putting-it-all-together",
    "title": "Processing Thermo Log files",
    "section": "Putting it all together",
    "text": "Putting it all together\nThis is the function used to import individual log files into a dataframe.\n\nimport_orbitrap_logfiles &lt;- function(file){\n  \n  # Loading libraries\n  require(tidyverse)\n  require(janitor)\n  require(lubridate)\n  \n  # Importing log file\n  logfile &lt;- read.delim2(file, sep = \"\\t\", header = FALSE)\n  \n  # Indexing the header-rows\n  index &lt;- grep(\"[a-z]\", logfile[,3])\n  \n  # Removing Non-ASCII characters\n  logfile[index[1],] &lt;- iconv(logfile[index[1],], \"utf-8\", \"ascii\", sub = \"\")\n  \n  # Assigning new column name\n  names(logfile) &lt;- logfile[index[1],]\n  \n  # Removing header-rows\n  logfile &lt;- logfile[-index,]\n  \n  # Cleaning column names\n  logfile &lt;- logfile %&gt;% clean_names(case = \"snake\") \n  \n  # Creating a vector of date-time. I need to deal with this separately\n  date_column &lt;- logfile$date\n  \n  # Removing the date-time from the dataframe\n  logfile$date &lt;- NA\n  \n  # Need to convert the entire dataframe to numeric\n  logfile &lt;- as.data.frame(sapply(logfile, FUN = as.numeric))\n  \n  # Now that the dataframe is numeric, I can add back the date-time\n  logfile$date &lt;- date_column\n  \n  # Formatting date-time\n  logfile$date &lt;- ymd_hms(logfile$date)\n  \n  # return dataframe\n  return(logfile)\n  \n}\n\n\nReading many log files\n\n# directory where log files are kept\ndirectory &lt;- \"QEHF_logfiles/\"\n\n# Reading the log files in the directory\nfilelist &lt;- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# function to read in log files with some error handling\nread_logfile_to_df &lt;- function(x){\n  tryCatch(import_orbitrap_logfiles(x),\n           error = function(e) NA,\n           warning = function(w) NA)\n}\n\n# importing log files and saving as a list\nlog &lt;- filelist %&gt;% \n  lapply(read_logfile_to_df) \n\n# Removing log files that generated an error\n# I can go back and investigate why this happened later\nlog &lt;- log[which(!is.na(log))]\n\n# Concatenated files\ndata &lt;- log %&gt;% \n  bind_rows()\n\n\n\nAmbient Temperature plot\n\ndata %&gt;% \n  filter(date &gt;= as.Date(\"2018-04-01\")) %&gt;%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = ambient_temperature_raw_c)) +\n  theme_bw(base_size = 22) +\n  labs(x = NULL,\n       y = expression('Temp ('~degree*C*')')) +\n  scale_x_datetime(date_breaks = \"3 month\", \n                   date_minor_breaks = \"1 month\",\n                   date_labels = \"%b%y\")\n\n\n\n\n\n\nInstrument readbacks\nThe log files record numerous instrument readbacks including:\n\nAmbient temperature\nAnalyzer temperature\nCEPS Peltier temperature\nFore vacuum pressure\nHigh vacuum pressure\nUltra high vacuum pressure\n\nBelow is the full list of readbacks that are available for the QE-HF.\nNote: The list of readbacks for each instrument will vary slightly depending on model and tune version\n\n\n\n\n\n\nInstrument Readbacks\n\n\n\n\nup_time_days\n\n\nvacuum_1_hv_mbar\n\n\nvacuum_2_uhv_mbar\n\n\nvacuum_3_fore_mbar\n\n\nvacuum_4_humidity_mbar\n\n\nturbo1_temp_bearing_r_c\n\n\nturbo1_temp_motor_r_c\n\n\nturbo1_temp_bottompart_r_c\n\n\nturbo1_temp_powerstage_r_c\n\n\nturbo1_temp_electronics_r_c\n\n\nturbo1_volt_r_v\n\n\nturbo1_curr_r_a\n\n\nturbo2_temp_bearing_r_c\n\n\nturbo2_temp_motor_r_c\n\n\nturbo2_temp_bottompart_r_c\n\n\nturbo2_temp_powerstage_r_c\n\n\nturbo2_temp_electronics_r_c\n\n\nturbo2_volt_r_v\n\n\nturbo2_curr_r_a\n\n\nturbo3_temp_bearing_r_c\n\n\nturbo3_temp_motor_r_c\n\n\nturbo3_temp_bottompart_r_c\n\n\nturbo3_temp_powerstage_r_c\n\n\nturbo3_temp_electronics_r_c\n\n\nturbo3_volt_r_v\n\n\nturbo3_curr_r_a\n\n\nambient_temperature_raw_c\n\n\nambient_humidity_result_percent\n\n\ncapillary_temperature_c\n\n\nitv_gas_pressure_actual_bar\n\n\nios_heatsink_temperature_c\n\n\ninj_flat_ampl_vpp\n\n\ninj_flat_freq_k_hz\n\n\nbent_flat_freq_k_hz\n\n\nios_rf2_3_freq_k_hz\n\n\nctrap_rf_amp_vpp\n\n\nctrap_amp_current_a\n\n\nctrap_freq_m_hz\n\n\nce_pos_electronics_temperature_act_c\n\n\nce_neg_electronics_temperature_act_c\n\n\nanalyzer_temperature_sensor_c\n\n\nanalyzer_temp_sensor_filtered_c\n\n\nanalyzer_temperature_with_delay_model_c\n\n\nceps_peltier_temperature_sensor_c\n\n\nquad_detector_temperature_c"
  },
  {
    "objectID": "posts/20240616-thermo-log-files/index.html#reading-a-log-file",
    "href": "posts/20240616-thermo-log-files/index.html#reading-a-log-file",
    "title": "Processing Thermo Log files",
    "section": "Reading a log file",
    "text": "Reading a log file\n\nLibraries used\n\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(kableExtra)\n\n\n# directory where I keep the log files\ndirectory &lt;- \"QEHF_logfiles/\"\n\n# Reading the log files in the directory\nfilelist &lt;- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# plucking a single log file to demonstrate\nfile &lt;- filelist[1]\n\n\n\nImporting a single file\n\nlogfile &lt;- read.delim2(file, sep = \"\\t\", header = FALSE)\n\nDuring the file import, I’m using header = FALSE. The instrument log files do not always have the first row with the header information.\nAdditionally, the header row is often embedded multiple times in a single log file. Scroll down and see how many times this log file has the header information. This will need to be cleaned up in subsequent steps.\n\n\n\n\n\n\nV1\nV2\nV3\nV4\nV5\nV6\nV7\n\n\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472717488\n2016-09-01 08:10:49\n0.696261574074\n3.15903902133e-09\n9.08652659437e-10\n1.94529413747\n0.00318003167635\n\n\n1472718388\n2016-09-01 08:25:49\n0.706678240741\n3.15903902133e-09\n9.08652659437e-10\n1.93167114622\n0.00311368869796\n\n\n1472719288\n2016-09-01 08:40:49\n0.717094907407\n3.15903902133e-09\n9.08652659437e-10\n1.93167114622\n0.00322504379452\n\n\n1472720188\n2016-09-01 08:55:50\n0.727511574074\n3.15903902133e-09\n8.7728322682e-10\n1.91814355746\n0.00684082905672\n\n\n1472721088\n2016-09-01 09:10:49\n0.737928240741\n3.13692038539e-09\n8.46996761706e-10\n1.93167114622\n0.00669811319081\n\n\n1472721988\n2016-09-01 09:25:49\n0.748333333333\n3.15903902133e-09\n8.24970070541e-10\n1.91814355746\n0.0072874821726\n\n\n1472722888\n2016-09-01 09:40:49\n0.758761574074\n3.13692038539e-09\n8.03516197533e-10\n1.93167114622\n0.00809764594458\n\n\n1472723788\n2016-09-01 09:55:50\n0.769166666667\n3.13692038539e-09\n7.82620246179e-10\n1.93167114622\n0.00965296908481\n\n\n1472724688\n2016-09-01 10:10:49\n0.779594907407\n3.11495661746e-09\n7.6899238779e-10\n1.93167114622\n0.00912523869282\n\n\n1472725588\n2016-09-01 10:25:49\n0.79\n3.13692038539e-09\n7.55601832902e-10\n1.93167114622\n0.0106509932333\n\n\n1472726488\n2016-09-01 10:40:49\n0.800416666667\n3.13692038539e-09\n7.55601832902e-10\n1.93167114622\n0.0105764037999\n\n\n1472727388\n2016-09-01 10:55:50\n0.810833333333\n3.15903902133e-09\n7.42444449322e-10\n1.91814355746\n0.00965296908481\n\n\n1472728288\n2016-09-01 11:10:49\n0.82125\n3.13692038539e-09\n7.29516176808e-10\n1.94529413747\n0.00958536886394\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472739175\n2016-09-01 14:12:11\n0.947233796296\n3.15903902133e-09\n1.04575561764e-09\n1.95901320402\n0.00827018148107\n\n\n1472740075\n2016-09-01 14:27:16\n0.957650462963\n7.61202696136e-05\n1.34912210331e-09\n1.56448223228\n0.0068890735804\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472740659\n2016-09-01 14:36:55\n0.964421296296\n3.82343674603e-05\n1.06428819311e-09\n1.6318609378\n0.008748462243\n\n\n1472741559\n2016-09-01 14:51:59\n0.974826388889\n3.20374527283e-09\n1.05498121156e-09\n1.48938178622\n0.00744275565021\n\n\n1472742459\n2016-09-01 15:07:00\n0.98525462963\n3.15903902133e-09\n1.05498121156e-09\n1.48938178622\n0.00684082905672\n\n\n1472743359\n2016-09-01 15:21:59\n0.995659722222\n3.13692038539e-09\n1.08314919748e-09\n1.57551564643\n0.00637658107113\n\n\n1472744262\n2016-09-01 15:37:02\n1.00611111111\n3.18131361724e-09\n1.09270467533e-09\n1.56448223228\n0.00546313597647\n\n\n1472745159\n2016-09-01 15:51:59\n1.01649305556\n3.15903902133e-09\n1.10234445105e-09\n1.52111585898\n0.00439366931872\n\n\n1472746059\n2016-09-01 16:07:00\n1.02689814815\n3.15903902133e-09\n1.1317770349e-09\n1.51046340923\n0.00376427628788\n\n\n1472746959\n2016-09-01 16:21:59\n1.03731481481\n3.13692038539e-09\n1.1619954684e-09\n1.49988555912\n0.00302737938512\n\n\n1472747861\n2016-09-01 16:36:59\n1.04775462963\n3.18131361724e-09\n1.1619954684e-09\n1.49988555912\n0.00248661450305\n\n\n1472748761\n2016-09-01 16:51:56\n1.0581712963\n3.13692038539e-09\n1.18258801255e-09\n1.52111585898\n0.00216056211893\n\n\n1472749661\n2016-09-01 17:07:00\n1.06858796296\n3.15903902133e-09\n1.19302073372e-09\n1.51046340923\n0.00199983341008\n\n\nTime [sec]\nDate\nUp-Time [days]\nVacuum 1 (HV) [mbar]\nVacuum 2 (UHV) [mbar]\nVacuum 3 (Fore) [mbar]\nVacuum 4/humidity [mbar]\n\n\n1472750010\n2016-09-01 17:12:51\n1.07263888889\n3.15903902133e-09\n1.18258801255e-09\n1.6318609378\n0.00246920061846\n\n\n1472750910\n2016-09-01 17:27:51\n1.08305555556\n3.15903902133e-09\n1.20354549174e-09\n1.49988555912\n0.00216056211893\n\n\n1472751810\n2016-09-01 17:42:51\n1.09347222222\n3.18131361724e-09\n1.19302073372e-09\n1.49988555912\n0.00210067282044\n\n\n1472752710\n2016-09-01 17:57:51\n1.10388888889\n3.13692038539e-09\n1.20354549174e-09\n1.49988555912\n0.00208596170458\n\n\n1472753610\n2016-09-01 18:12:51\n1.11429398148\n3.15903902133e-09\n1.20354549174e-09\n1.49988555912\n0.00208596170458\n\n\n1472754514\n2016-09-01 18:27:51\n1.12475694444\n3.18131361724e-09\n1.18258801255e-09\n1.48938178622\n0.00199983341008\n\n\n1472755411\n2016-09-01 18:42:48\n1.13513888889\n3.18131361724e-09\n1.18258801255e-09\n1.48938178622\n0.0106509932333\n\n\n1472756315\n2016-09-01 18:57:51\n1.14560185185\n3.15903902133e-09\n1.18258801255e-09\n1.48938178622\n0.00214543159534\n\n\n1472757212\n2016-09-01 19:12:49\n1.1559837963\n3.15903902133e-09\n1.17224652338e-09\n1.46859440062\n0.00197192162236\n\n\n1472758116\n2016-09-01 19:27:52\n1.16644675926\n3.15903902133e-09\n1.1619954684e-09\n1.47895157177\n0.00214543159534\n\n\n1472759013\n2016-09-01 19:42:49\n1.1768287037\n3.15903902133e-09\n1.19302073372e-09\n1.47895157177\n0.0020568478194\n\n\n1472759911\n2016-09-01 19:57:45\n1.18721064815\n3.15903902133e-09\n1.1518340568e-09\n1.48938178622\n0.0108017539222\n\n\n1472760814\n2016-09-01 20:12:49\n1.19767361111\n3.15903902133e-09\n1.14176150465e-09\n1.47895157177\n0.00222215883613\n\n\n1472761712\n2016-09-01 20:27:46\n1.20805555556\n3.15903902133e-09\n1.1317770349e-09\n1.47895157177\n0.00213040703156\n\n\n1472762615\n2016-09-01 20:42:55\n1.21851851852\n3.15903902133e-09\n1.14176150465e-09\n1.48938178622\n0.00235067062559\n\n\n1472763513\n2016-09-01 20:57:52\n1.22890046296\n3.18131361724e-09\n1.1317770349e-09\n1.49988555912\n0.00211548768554\n\n\n1472764416\n2016-09-01 21:12:55\n1.23936342593\n3.15903902133e-09\n1.12187987729e-09\n1.49988555912\n0.00236724858474\n\n\n1472765314\n2016-09-01 21:27:53\n1.24974537037\n3.15903902133e-09\n1.12187987729e-09\n1.48938178622\n0.00213040703156\n\n\n1472766211\n2016-09-01 21:42:50\n1.26012731481\n3.15903902133e-09\n1.11206926829e-09\n1.48938178622\n0.0105764037999\n\n\n1472767115\n2016-09-01 21:57:53\n1.27059027778\n3.11495661746e-09\n1.09270467533e-09\n1.48938178622\n0.00235067062559\n\n\n1472768012\n2016-09-01 22:12:50\n1.28097222222\n3.13692038539e-09\n1.09270467533e-09\n1.47895157177\n0.0021911440399\n\n\n1472768916\n2016-09-01 22:27:55\n1.29143518519\n3.15903902133e-09\n1.08314919748e-09\n1.48938178622\n0.00240075607267\n\n\n1472769813\n2016-09-01 22:42:53\n1.30181712963\n3.15903902133e-09\n1.08314919748e-09\n1.47895157177\n0.00222215883613\n\n\n1472770711\n2016-09-01 22:57:49\n1.31221064815\n3.15903902133e-09\n1.06428819311e-09\n1.48938178622\n0.0102832331483\n\n\n1472771614\n2016-09-01 23:12:52\n1.32266203704\n3.18131361724e-09\n1.07367728031e-09\n1.47895157177\n0.00233420876271\n\n\n1472772512\n2016-09-01 23:27:49\n1.33305555556\n3.15903902133e-09\n1.07367728031e-09\n1.46859440062\n0.00210067282044\n\n\n1472773415\n2016-09-01 23:42:53\n1.34350694444\n3.15903902133e-09\n1.05498121156e-09\n1.47895157177\n0.0022536126348\n\n\n1472774313\n2016-09-01 23:57:50\n1.35387731481\n3.15903902133e-09\n1.05498121156e-09\n1.47895157177\n0.00204244361219\n\n\n\n\n\n\n\n\n\nCleaning up header\nThese are the steps being performed in the following chunk.\n\nIndexing the rows in a single log file that contain the header-row\nRemoving Non-ASCII characters from header\nAssigning a header-row as column names\nRemoving all header-rows from log file\nCleaning up column names using the janitor package\n\n\n# Indexing the header-rows\nindex &lt;- grep(\"[a-z]\", logfile[,3])\n\n# Removing Non-ASCII characters\nlogfile[index[1],] &lt;- iconv(logfile[index[1],], \"utf-8\", \"ascii\", sub = \"\")\n\n# Assigning new column name\nnames(logfile) &lt;- logfile[index[1],]\n\n# Removing header-rows\nlogfile &lt;- logfile[-index,]\n\n# Cleaning column names\nlogfile &lt;- logfile %&gt;% clean_names(case = \"snake\") \n\n\n\nFormatting data types\nThe next step is to convert the dataframe to numeric and the date column to datetime. During the data import, the header-rows being present forced all columns to import as character type.\n\n# Creating a vector of date-time. I need to deal with this separately\ndate_column &lt;- logfile$date\n\n# Removing the date column from the data frame\nlogfile$date &lt;- NA\n\n# Need to convert the entire data frame to numeric\nlogfile &lt;- as.data.frame(sapply(logfile, FUN = as.numeric))\n\n# Now that the data frame is numeric, I can add back the date-time\nlogfile$date &lt;- date_column\n \n# Formatting date-time using lubridate\nlogfile$date &lt;- ymd_hms(logfile$date)"
  }
]