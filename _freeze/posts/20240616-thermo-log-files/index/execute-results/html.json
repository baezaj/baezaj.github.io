{
  "hash": "1b829caf700d9479dcd970139a0c998f",
  "result": {
    "markdown": "---\ntitle: \"Processing Thermo Log files \"\n# description:\nauthor:\n  - name: Josue Baeza\n    url: https://josuebaeza.com/\n    orcid: 0000-0003-4960-3905\ndate: 06-6-2024\ndate-modified: last-modified\ncategories: [Mass Spectrometry, Thermo, Orbitrap, Log files] # self-defined categories\n# image: \ntoc: true\ntoc-location: left\ntoc-expand: true\ndraft: true\n---\n\n\n## Background\n\nThermo mass spectrometers record daily *log* files that contain a lot of valuable information regarding the status of each instrument. The *log* files record data for temperature, pressure, voltages, etc. from numerous guages. Visualizing this data longitudinally can help assess instrument performance. \n\nIn this blog post, I will show you were to find the *log* files, how to import them, and how to visualize. \n\n### Supported Instruments\n\n* Q-Exactive family instruments\n* Exploris family instruments\n\n*Note: Orbitrap Eclipse instruments do generate log files, however, this blog post will only focus on the instruments above because I don't have access to Eclipse log files*\n\n\n### Directories\n\nData is located in the following directories for the different instruments\n\n#### Q Exactive\n\n`C:\\ProgramData\\Thermo\\Exactive\\Log`\n\n#### Exploris\n\n`C:\\ProgramData\\Thermo\\Exploris\\Log`\n\n#### Tribrids\n\n`C:\\Thermo\\Instruments\\TNG\\OrbitrapXXXXX\\X.X\\System\\logs`\n\n## Importing *log* files\n\nThis is the function used to import individual log files into a dataframe. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nimport_orbitrap_logfiles <- function(file){\n  \n  # Loading libraries\n  require(tidyverse)\n  require(janitor)\n  require(lubridate)\n  \n  # Importing log file\n  data <- read.delim2(file, sep = \"\\t\", header = FALSE)\n  \n  # Indexing the rows with text\n  index <- grep(\"[a-z]\", data[,3])\n  \n  # Assigning new column name\n  names(data) <- data[index[1],]\n  \n  # Removing text rows\n  data <- data[-index,]\n  \n  # Cleaning column names\n  # names(data) <- gsub(\"\\\\+\", \"pos \", names(data))\n  # names(data) <- gsub(\"\\\\-[0-9]\", \"neg \", names(data))\n  data <- data %>% clean_names(case = \"snake\") \n  \n  # Creating a vector of date-time. I need to deal with this separately\n  date_column <- data$date\n  \n  # Removing the date-time from the dataframe\n  data$date <- NA\n  \n  # Need to convert the entire dataframe to numeric\n  data <- as.data.frame(sapply(data, FUN = as.numeric))\n  \n  # Now that the dataframe is numeric, I can add back the date-time\n  data$date <- date_column\n  \n  # add logfile name\n  data$file <- basename(file)\n  \n  # Formatting date-time\n  data$date <- ymd_hms(data$date)\n  \n  # return dataframe\n  return(data)\n  \n}\n```\n:::\n\n\n### Loading libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\n```\n:::\n\n\n### Reading log files\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# directory where log files are kept\ndirectory <- \"QEHF_logfiles/\"\n\n# Reading the log files in the directory\nfilelist <- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# function to read in log files with some error handling\nread_logfile_to_df <- function(x){\n  tryCatch(import_orbitrap_logfiles(x),\n           error = function(e) NA)\n}\n\n# importing log files and saving as a list\nlog <- filelist %>% \n  lapply(read_logfile_to_df) \n\n# Removing log files that generated an error\n# I can go back and investigate why this happened later\nlog <- log[which(!is.na(log))]\n\n# Concatenated files\ndata <- log %>% \n  bind_rows()\n```\n:::\n\n\n### Ambient Temperature\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code  code-fold=\"false\"}\ndata %>% \n  filter(date >= as.Date(\"2018-04-01\")) %>%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = ambient_temperature_raw_c)) +\n  theme_bw(base_size = 22) +\n  labs(x = NULL,\n       y = expression('Temp ('~degree*C*')')) +\n  scale_x_datetime(date_breaks = \"6 month\", \n                   date_minor_breaks = \"1 month\",\n                   date_labels = \"%b%y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Ambient Temp 1-1.png){width=1536}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}