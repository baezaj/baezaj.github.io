{
  "hash": "318908139706debe7f7321ed3cffefc2",
  "result": {
    "markdown": "---\ntitle: \"Processing Thermo Log files \"\n# description:\nauthor:\n  - name: Josue Baeza\n    url: https://josuebaeza.com/\n    orcid: 0000-0003-4960-3905\ndate: 06-6-2024\ndate-modified: last-modified\ncategories: [Mass Spectrometry, Thermo, Orbitrap, Log files] # self-defined categories\n# image: \ntoc: true\ntoc-location: left\ntoc-expand: true\ndraft: false\n---\n\n\n## Background\n\nThermo mass spectrometers record daily *log* files that contain a lot of valuable information regarding the status of each instrument. The *log* files record data for temperature, pressure, voltages, etc. from numerous guages. Visualizing this data longitudinally can help assess instrument performance. \n\nIn this blog post, I will show you were to find the *log* files, how to import them, and how to visualize. \n\n### Supported Instruments\n\n* Q-Exactive family instruments\n* Exploris family instruments\n\n*Note: Orbitrap Eclipse instruments do generate log files, however, this blog post will only focus on the instruments above because I don't have access to Eclipse log files*\n\n\n### Directories\n\nData is located in the following directories for the different instruments\n\n#### Q Exactive\n\n`C:\\ProgramData\\Thermo\\Exactive\\Log`\n\n#### Exploris\n\n`C:\\ProgramData\\Thermo\\Exploris\\Log`\n\n#### Tribrids\n\n`C:\\Thermo\\Instruments\\TNG\\OrbitrapXXXXX\\X.X\\System\\logs`\n\n## Reading a *log* file\n\n### Libraries used\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\nlibrary(kableExtra)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# directory where I keep the log files\ndirectory <- \"QEHFX_logfiles/\"\n\n# Reading the log files in the directory\nfilelist <- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# plucking a single log file to demonstrate\nfile <- filelist[1]\n```\n:::\n\n\n\n### Importing a single file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogfile <- read.delim2(file, sep = \"\\t\", header = FALSE)\n```\n:::\n\n\n\n\nDuring the file import, I'm using `header = FALSE`. The instrument log files do not always have the first row with the header information. \n\nAdditionally, the header row is often embedded multiple times in a single log file. Scroll down and see how many times this log file has the header information. This will need to be cleaned up in subsequent steps.\n\n\n::: {.cell .column-body-outset}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; \"><table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V1 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V2 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V3 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V4 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V5 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V6 </th>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> V7 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Time [sec] </td>\n   <td style=\"text-align:left;\"> Date </td>\n   <td style=\"text-align:left;\"> Up-Time [days] </td>\n   <td style=\"text-align:left;\"> Vacuum 1 (HV) [mbar] </td>\n   <td style=\"text-align:left;\"> Vacuum 2 (UHV) [mbar] </td>\n   <td style=\"text-align:left;\"> Vacuum 3 (Fore) [mbar] </td>\n   <td style=\"text-align:left;\"> Vacuum 4/humidity [mbar] </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522100156 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 21:35:00 </td>\n   <td style=\"text-align:left;\"> 0.00550925925926 </td>\n   <td style=\"text-align:left;\"> 2.86308390141e-09 </td>\n   <td style=\"text-align:left;\"> 1.660233869e-13 </td>\n   <td style=\"text-align:left;\"> 3.36548707765 </td>\n   <td style=\"text-align:left;\"> 0.00255750683657 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522101056 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 21:50:04 </td>\n   <td style=\"text-align:left;\"> 0.0159375 </td>\n   <td style=\"text-align:left;\"> 2.54370802439e-05 </td>\n   <td style=\"text-align:left;\"> 1.16903339139e-07 </td>\n   <td style=\"text-align:left;\"> 3.48584725969 </td>\n   <td style=\"text-align:left;\"> 0.00165419810092 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522101956 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 22:05:04 </td>\n   <td style=\"text-align:left;\"> 0.0263425925926 </td>\n   <td style=\"text-align:left;\"> 2.21022954909e-05 </td>\n   <td style=\"text-align:left;\"> 7.14848238713e-08 </td>\n   <td style=\"text-align:left;\"> 3.53518807913 </td>\n   <td style=\"text-align:left;\"> 0.00106244424219 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522102856 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 22:20:04 </td>\n   <td style=\"text-align:left;\"> 0.0367476851852 </td>\n   <td style=\"text-align:left;\"> 2.80336465311e-09 </td>\n   <td style=\"text-align:left;\"> 9.55197064021e-08 </td>\n   <td style=\"text-align:left;\"> 3.51043098182 </td>\n   <td style=\"text-align:left;\"> 0.00119726861043 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522103756 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 22:35:03 </td>\n   <td style=\"text-align:left;\"> 0.0471759259259 </td>\n   <td style=\"text-align:left;\"> 2.78373634155e-09 </td>\n   <td style=\"text-align:left;\"> 1.25413147734e-07 </td>\n   <td style=\"text-align:left;\"> 3.48584725969 </td>\n   <td style=\"text-align:left;\"> 0.000813442590873 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522104656 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 22:50:04 </td>\n   <td style=\"text-align:left;\"> 0.0575810185185 </td>\n   <td style=\"text-align:left;\"> 2.78373634155e-09 </td>\n   <td style=\"text-align:left;\"> 1.0993229209e-07 </td>\n   <td style=\"text-align:left;\"> 3.51043098182 </td>\n   <td style=\"text-align:left;\"> 0.000706781548007 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522105556 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 23:05:04 </td>\n   <td style=\"text-align:left;\"> 0.0680092592593 </td>\n   <td style=\"text-align:left;\"> 2.80336465311e-09 </td>\n   <td style=\"text-align:left;\"> 8.82596717239e-08 </td>\n   <td style=\"text-align:left;\"> 3.51043098182 </td>\n   <td style=\"text-align:left;\"> 0.000568421583481 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522106456 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 23:20:03 </td>\n   <td style=\"text-align:left;\"> 0.0784143518519 </td>\n   <td style=\"text-align:left;\"> 2.82313136521e-09 </td>\n   <td style=\"text-align:left;\"> 7.40409406385e-08 </td>\n   <td style=\"text-align:left;\"> 3.46143569858 </td>\n   <td style=\"text-align:left;\"> 0.000677598898499 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522107356 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 23:35:03 </td>\n   <td style=\"text-align:left;\"> 0.0888425925926 </td>\n   <td style=\"text-align:left;\"> 2.82313136521e-09 </td>\n   <td style=\"text-align:left;\"> 6.37712756222e-08 </td>\n   <td style=\"text-align:left;\"> 3.48584725969 </td>\n   <td style=\"text-align:left;\"> 0.00054879498479 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 1522108256 </td>\n   <td style=\"text-align:left;\"> 2018-03-26 23:50:04 </td>\n   <td style=\"text-align:left;\"> 0.0992476851852 </td>\n   <td style=\"text-align:left;\"> 2.80336465311e-09 </td>\n   <td style=\"text-align:left;\"> 5.34976523316e-08 </td>\n   <td style=\"text-align:left;\"> 3.48584725969 </td>\n   <td style=\"text-align:left;\"> 0.000631614132463 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n\n### Cleaning up header\n\nThese are the steps being performed in the following chunk.\n\n  1. Indexing the rows in a single log file that contain the header-row\n  2. Removing Non-ASCII characters from header\n  3. Assigning a header-row as column names\n  4. Removing all header-rows from log file\n  5. Cleaning up column names using the `janitor` package\n  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Indexing the header-rows\nindex <- grep(\"[a-z]\", logfile[,3])\n\n# Removing Non-ASCII characters\nlogfile[index[1],] <- iconv(logfile[index[1],], \"utf-8\", \"ascii\", sub = \"\")\n\n# Assigning new column name\nnames(logfile) <- logfile[index[1],]\n\n# Removing header-rows\nlogfile <- logfile[-index,]\n\n# Cleaning column names\nlogfile <- logfile %>% clean_names(case = \"snake\") \n```\n:::\n\n\n\n### Formatting data types\n\nThe next step is to convert the dataframe to `numeric` and the date column to `datetime`. During the data import, the header-rows being present forced all columns to import as character type. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a vector of date-time. I need to deal with this separately\ndate_column <- logfile$date\n\n# Removing the date column from the data frame\nlogfile$date <- NA\n\n# Need to convert the entire data frame to numeric\nlogfile <- as.data.frame(sapply(logfile, FUN = as.numeric))\n\n# Now that the data frame is numeric, I can add back the date-time\nlogfile$date <- date_column\n \n# Formatting date-time using lubridate\nlogfile$date <- ymd_hms(logfile$date)\n```\n:::\n\n\n\n## Putting it all together\n\nThis is the function used to import individual log files into a dataframe. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nimport_orbitrap_logfiles <- function(file){\n  \n  # Loading libraries\n  require(tidyverse)\n  require(janitor)\n  require(lubridate)\n  \n  # Importing log file\n  logfile <- read.delim2(file, sep = \"\\t\", header = FALSE)\n  \n  # Indexing the header-rows\n  index <- grep(\"[a-z]\", logfile[,3])\n  \n  # Removing Non-ASCII characters\n  logfile[index[1],] <- iconv(logfile[index[1],], \"utf-8\", \"ascii\", sub = \"\")\n  \n  # Assigning new column name\n  names(logfile) <- logfile[index[1],]\n  \n  # Removing header-rows\n  logfile <- logfile[-index,]\n  \n  # Cleaning column names\n  logfile <- logfile %>% clean_names(case = \"snake\") \n  \n  # Creating a vector of date-time. I need to deal with this separately\n  date_column <- logfile$date\n  \n  # Removing the date-time from the dataframe\n  logfile$date <- NA\n  \n  # Need to convert the entire dataframe to numeric\n  logfile <- as.data.frame(sapply(logfile, FUN = as.numeric))\n  \n  # Now that the dataframe is numeric, I can add back the date-time\n  logfile$date <- date_column\n  \n  # Formatting date-time\n  logfile$date <- ymd_hms(logfile$date)\n  \n  # return dataframe\n  return(logfile)\n  \n}\n```\n:::\n\n\n\n\n\n### Reading many log files\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# directory where log files are kept\ndirectory <- \"QEHFX_logfiles/\"\n\n# Reading the log files in the directory\nfilelist <- list.files(directory, pattern = \"InstrumentTemperature\", full.names = TRUE)\n\n# function to read in log files with some error handling\nread_logfile_to_df <- function(x){\n  tryCatch(import_orbitrap_logfiles(x),\n           error = function(e) NA,\n           warning = function(w) NA)\n}\n\n# importing log files and saving as a list\nlog <- filelist %>% \n  lapply(read_logfile_to_df) \n\n# Removing log files that generated an error\n# I can go back and investigate why this happened later\nlog <- log[which(!is.na(log))]\n\n# Concatenated files\ndata <- log %>% \n  bind_rows()\n```\n:::\n\n\n\n### Instrument readbacks\n\nThe log files record numerous instrument readbacks including:\n\n-   Ambient temperature\n-   Analyzer temperature\n-   CEPS Peltier temperature\n-   Fore vacuum pressure\n-   High vacuum pressure\n-   Ultra high vacuum pressure\n\nBelow is the full list of readbacks that are available for the QE-HFX. \n\n*Note: The list of readbacks for each instrument will vary slightly depending on model and tune version*\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:500px; \"><table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> Instrument Readbacks </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> up_time_days </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> vacuum_1_hv_mbar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> vacuum_2_uhv_mbar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> vacuum_3_fore_mbar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> vacuum_4_humidity_mbar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_temp_bearing_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_temp_motor_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_temp_bottompart_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_temp_powerstage_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_temp_electronics_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_volt_r_v </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo1_curr_r_a </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_temp_bearing_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_temp_motor_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_temp_bottompart_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_temp_powerstage_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_temp_electronics_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_volt_r_v </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo2_curr_r_a </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_temp_bearing_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_temp_motor_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_temp_bottompart_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_temp_powerstage_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_temp_electronics_r_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_volt_r_v </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> turbo3_curr_r_a </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ambient_temperature_raw_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ambient_humidity_result_percent </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> capillary_temperature_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> itv_gas_pressure_actual_bar </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ios_heatsink_temperature_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> inj_flat_ampl_vpp </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> inj_flat_freq_k_hz </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bent_flat_freq_k_hz </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ios_rf2_3_freq_k_hz </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ctrap_rf_amp_vpp </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ctrap_amp_current_a </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ctrap_freq_m_hz </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ce_pos_electronics_temperature_act_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ce_neg_electronics_temperature_act_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> analyzer_temperature_sensor_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> analyzer_temp_sensor_filtered_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> analyzer_temperature_with_delay_model_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ceps_peltier_temperature_sensor_c </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> quad_detector_temperature_c </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n\n\n### Ambient Temperature\n\n\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata %>% \n  filter(date >= as.Date(\"2018-04-01\")) %>%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = ambient_temperature_raw_c)) +\n  theme_bw(base_size = 22) +\n  labs(x = NULL,\n       y = expression('Temp ('~degree*C*')')) +\n  scale_x_datetime(date_breaks = \"3 month\", \n                   date_minor_breaks = \"1 month\",\n                   date_labels = \"%b%y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Ambient Temp 1-1.png){width=1536}\n:::\n:::\n\n\n### Ultra High (UHV) Vacuum pressure \n\nUsing `vacuum_2_uhv_mbar` to plot the UHV pressure can be useful to visualize instrument bake-out procedures. Each time there is a large spike in pressure, it coincides with an instrument venting and bake-out process. \n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata %>% \n  filter(date >= as.Date(\"2018-04-01\")) %>%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = vacuum_2_uhv_mbar)) +\n  theme_bw(base_size = 22) +\n  scale_y_log10() +\n  labs(x = NULL,\n       y = expression('Pressure (mbar)')) +\n  scale_x_datetime(date_breaks = \"3 month\", \n                   date_minor_breaks = \"1 month\",\n                   date_labels = \"%b%y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/UHV Pressure 1-1.png){width=1536}\n:::\n:::\n\n\n### Orbitrap Temperature \n\nAnother way to visualize bake-out procedures is to plot the Orbitrap temperature directly using `analyzer_temperature_sensor_c`.\n\n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata %>% \n  filter(date >= as.Date(\"2018-04-01\")) %>%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = analyzer_temperature_sensor_c)) +\n  theme_bw(base_size = 22) +\n  scale_y_log10() +\n  labs(x = NULL,\n       y = expression('Temp ('~degree*C*')')) +\n  scale_x_datetime(date_breaks = \"3 month\", \n                   date_minor_breaks = \"1 month\",\n                   date_labels = \"%b%y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/Orbitrap Temp 1-1.png){width=1536}\n:::\n:::\n\n\n\n## But Why!?!?!\n\nThis project started when I was a postdoc in the [Garcia lab](https://www.bengarcialab.com/) \n\n\n::: {.cell .column-body-outset}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata %>% \n  filter(date >= as.Date(\"2018-10-01\"),\n         date <= as.Date(\"2018-12-01\")) %>%\n  ggplot(aes(x = date)) +\n  geom_line(aes(y = ambient_temperature_raw_c)) +\n  theme_bw(base_size = 22) +\n  labs(x = NULL,\n       y = expression('Temp ('~degree*C*')')) +\n  scale_x_datetime(date_breaks = \"1 month\", \n                   date_minor_breaks = \"1 week\",\n                   date_labels = \"%b%y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/QE HFX temp-1.png){width=1536}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}