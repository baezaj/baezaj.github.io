{
  "hash": "d43893521575a0260f8c91e2b9287d97",
  "result": {
    "markdown": "---\ntitle: \"Understanding \\\"forbidden zones\\\"\"\ndescription: \"Can we replicate them from scratch?\"\nauthor:\n  - name: Josue Baeza\n    url: https://josuebaeza.com/\n    orcid: 0000-0003-4960-3905\ndate: 11-29-2023\ndate-modified: last-modified\ncategories: [Mass Spectrometry, DIA, Skyline] # self-defined categories\n# image: \ntoc: true\ntoc-location: left\ntoc-expand: true\ndraft: true \n---\n\n\n\n\n![From Pino et.al. (2020)](gr6_lrg.jpg)\n\nEver wondered what this \"optimize window placement\" feature is for? \n\n![Skyline Screenshot](optimize_window_placement.png){width=40%}\n\n\n\n\n\n\n\n\n\n\n### Importing data\n\n* Human fasta file\n* Acetyl Spectral library (from [Baeza et.al. 2020](https://pubs.acs.org/doi/10.1021/acs.jproteome.0c00088))\n* Precursor isolation windows\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Human fasta file\nhu_fasta <- import_fasta_as_df(\"../../../../../Garcia_Lab/Data/Fasta_Files/Human/Human_Uniprot_20190821_20416entries.fasta\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: seqinr\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'seqinr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    count\n```\n:::\n\n```{.r .cell-code}\n# acetylation stoichiometry spectral library\nack_speclib <- import(\"../../../../../Garcia_Lab/Data/Proteomics/Acetylation_Encylcopedia/data/Hek_stoich_curve_HPRP (inflated).tsv\")\n\n# window placement\noptimal_windows_proteome <- read_xlsx(\"../../../../../Garcia_Lab/Data/Methods/DIA/DIA_HFX_Proteome_Isolation_windows_400_1000_mz.xlsx\", sheet = 1)\n```\n:::\n\n\n#### Global functions\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Digesting protein\ndigest_argc <- function(sequence){\n  \n  tryCatch(\n    digest_aa_sequence(sequence, enzyme = \"arg.c\", missed = 0)$peptide,\n    error = function(e) NA,\n    warning = function(w) NA\n    )\n}\n\n# Digesting protein\ndigest_tryp <- function(sequence){\n  \n  tryCatch(\n    digest_aa_sequence(sequence, enzyme = \"trypsin\", missed = 0)$peptide,\n    error = function(e) NA,\n    warning = function(w) NA\n    )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_pep_len <- 7\nproton <- 1.007276466\n```\n:::\n\n\n\n### *In-silico* digest of the human proteome\n\nI am digesting the complete human fasta file using trypsin cleavage rules. This is a list of all possible tryptic peptides with a charge state of 2 or 3 and at least 7 amino acid residues.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Digesting human proteome\n# filtering for a minimum peptide length\nhu_prot <- hu_fasta %>% \n  mutate(peptide = map(ProteinSequence, digest_tryp)) %>% # digesting proteome TAKES A LONG TIME!\n  unnest(peptide) %>% \n  select(-ProteinSequence) %>% \n  mutate(pep_len = nchar(peptide)) %>% # Counting peptide length\n  filter(pep_len >= min_pep_len) # Filtering for peptide size\n\n# Calculating monoisotopic mass\n# All lysines have acetyl modification\nhu_prot <- hu_prot %>% \n  mutate(monoisotopic_mass = calculate_monoisotopic_mass(peptide, IAA = TRUE, AcK = FALSE))\n\n# Calculating most likely charge state based on R|H + 1\nhu_prot$z <- sapply(hu_prot$peptide, function(x){\n  length(unlist(gregexpr(\"K|R|H\", x))) + 1 # For N-terminus\n})\n\n# calculating precursor m/z\n# assuming z=2; z=3\nhu_prot <- hu_prot %>% \n  filter(z == 2 | z == 3) %>% \n  mutate(precursor_mz = (monoisotopic_mass + (z * proton)) / z)\n```\n:::\n\n\n### *In-silico* digest of the acetyl proteome\n\nIn this step, I am adding an acetyl modification to every lysine residue and digesting the complete human proteome using the Arg-C digest rules. Acetylation on lysine residues prevents the proteolytic digestion by trypsin. Therefore only the arginine residues are used for digestion. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Acetylation mass\nack_d0_mass <- 42.010565\nack_d3_mass <- 42.010565 - 3*(1.007825) + 3*(2.014102) \n\n# Digesting human proteome\n# Filtering for lysine containing peptides\n# filtering for a minimum peptide length\nhu_acetyl <- hu_fasta %>% \n  mutate(peptide = map(ProteinSequence, digest_argc)) %>% \n  unnest(peptide) %>% \n  select(-ProteinSequence) %>% \n  mutate(k_count = str_count(peptide, \"K\"),\n         pep_len = nchar(peptide)) %>% \n  filter(k_count > 0,\n         pep_len >= min_pep_len)\n\n# Calculating monoisotopic mass\n# All lysines have acetyl modification - either light (non-isotopic) or D3-Acetyl\nhu_acetyl <- hu_acetyl %>% \n  mutate(Ack_D0 = calculate_monoisotopic_mass(peptide, IAA = TRUE, AcK = TRUE),\n         AcK_D3 = Ack_D0 - k_count*ack_d0_mass + k_count*ack_d3_mass) %>% \n  gather(isotope, monoisotopic_mass, Ack_D0, AcK_D3)\n\n# Calculating most likely charge state based on R|H + 1\nhu_acetyl$z <- sapply(hu_acetyl$peptide, function(x){\n  length(unlist(gregexpr(\"R|H\", x))) + 1 # for n-terminus\n})\n\n# calculating precursor m/z\n# assuming z=2; z=3\nhu_acetyl <- hu_acetyl %>% \n  filter(z == 2 | z == 3) %>% \n  mutate(precursor_mz = (monoisotopic_mass + (z * proton)) / z)\n```\n:::\n\n\n\n### Acetyl spectral library cleaning\n\nI have a spectral library that was published in [Baeza et.al. 2020](https://pubs.acs.org/doi/10.1021/acs.jproteome.0c00088). I will also use this spectral library to compare with the human proteome analysis. As a clean up step, I am filtering only for peptides that are acetylated, i.e., contain a lysine residue. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering for acetyl peptide\nack_speclib <- ack_speclib %>% \n  mutate(acetyl = str_detect(ModifiedPeptide, \"Acetyl \\\\(K\"),\n         heavy = str_detect(LabeledPeptide, \"Acetyl D3\")) %>% \n  filter(acetyl == TRUE)\n\n# Removing duplicate entries\nack_speclib <- ack_speclib %>% \n  select(PrecursorCharge, PrecursorMz, StrippedPeptide, ModifiedPeptide, LabeledPeptide,\n         ProteinGroups, acetyl, heavy) %>% \n  distinct()\n```\n:::\n\n\n### Plots\n\nPlotting the number of precursors across the entire *m/z* range. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_mz <- 300\nmax_mz <- 2000\n\nggplot(hu_prot %>% filter(precursor_mz > min_mz, precursor_mz < max_mz),\n       aes(x = precursor_mz)) +\n  geom_histogram(position = \"dodge\", binwidth = 10, color = \"black\", fill = \"grey80\") +\n  scale_x_continuous(n.breaks = 15) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme_bw(base_size = 14) +\n  labs(title = \"Peptide m/z distribution\",\n       subtitle = \"Tryptic Proteome\",\n       y = \"Number of precursors\",\n       x = \"Precursor m/z\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWhat's the fraction of precursors covered within a given *m/z* range?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Initializing the for-loop\nproteome_coverage <- tibble(index = 1:10,\n                           start_mz = index * 100 + 200,\n                           stop_mz = index * 100 + 800,\n                           percent = NA_integer_)\n\nfor (i in seq_along(proteome_coverage$percent)){\n  # Calculating the percentage of peptides withing a given mz range\n  proteome_coverage$percent[i] <- length(which(hu_prot$precursor_mz > proteome_coverage$start_mz[i] & \n                                  hu_prot$precursor_mz < proteome_coverage$stop_mz[i])) / \n    nrow(hu_prot)\n}\n\n# Rendered table\nproteome_coverage %>% \n  select(-index) %>%\n  kable() %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> start_mz </th>\n   <th style=\"text-align:right;\"> stop_mz </th>\n   <th style=\"text-align:right;\"> percent </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 300 </td>\n   <td style=\"text-align:right;\"> 900 </td>\n   <td style=\"text-align:right;\"> 0.7367753 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 400 </td>\n   <td style=\"text-align:right;\"> 1000 </td>\n   <td style=\"text-align:right;\"> 0.6842329 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 500 </td>\n   <td style=\"text-align:right;\"> 1100 </td>\n   <td style=\"text-align:right;\"> 0.5229664 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 600 </td>\n   <td style=\"text-align:right;\"> 1200 </td>\n   <td style=\"text-align:right;\"> 0.3946038 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 700 </td>\n   <td style=\"text-align:right;\"> 1300 </td>\n   <td style=\"text-align:right;\"> 0.3021816 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 800 </td>\n   <td style=\"text-align:right;\"> 1400 </td>\n   <td style=\"text-align:right;\"> 0.2333734 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 900 </td>\n   <td style=\"text-align:right;\"> 1500 </td>\n   <td style=\"text-align:right;\"> 0.1813654 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1000 </td>\n   <td style=\"text-align:right;\"> 1600 </td>\n   <td style=\"text-align:right;\"> 0.1419781 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1100 </td>\n   <td style=\"text-align:right;\"> 1700 </td>\n   <td style=\"text-align:right;\"> 0.1111660 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1200 </td>\n   <td style=\"text-align:right;\"> 1800 </td>\n   <td style=\"text-align:right;\"> 0.0874620 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hu_acetyl %>% filter(precursor_mz > min_mz, precursor_mz < max_mz),\n       aes(x = precursor_mz)) +\n  geom_histogram(position = \"dodge\", binwidth = 10, color = \"black\", fill = \"grey80\") +\n  scale_x_continuous(n.breaks = 15) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme_bw(base_size = 14) +\n  labs(title = \"Peptide m/z distribution\",\n       subtitle = \"Acetyl Proteome\",\n       y = \"Number of precursors\",\n       x = \"Precursor m/z\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe peptides represented in this plot contains multiple lysine groups. Let's group the histogram by the number of lysines. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(hu_acetyl %>% filter(precursor_mz > min_mz, precursor_mz < max_mz, k_count <= 4),\n       aes(x = precursor_mz)) +\n  geom_histogram(position = \"dodge\", binwidth = 10, color = \"black\", fill = \"grey80\") +\n  scale_x_continuous(n.breaks = 15) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  theme_bw(base_size = 14) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  facet_wrap(~k_count, nrow = 2) +\n  labs(title = \"Peptide m/z distribution\",\n       subtitle = \"Acetyl Proteome\",\n       y = \"Number of precursors\",\n       x = \"Precursor m/z\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWhen calculating the percentage of precursors within a given *m/z* range, I am going to limit the search to peptides with one or two lysines. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nhu_acetyl_filtered <- hu_acetyl %>% \n  filter(k_count <= 2,\n         precursor_mz <= 2000,\n         precursor_mz >= 300)\n\n# Initializing the for-loop\nacetyl_prot_coverage <- tibble(index = 1:10,\n                           start_mz = index * 100 + 200,\n                           stop_mz = index * 100 + 800,\n                           percent = NA_integer_)\n\nfor (i in seq_along(acetyl_prot_coverage$percent)){\n  # Calculating the percentage of peptides withing a given mz range\n  acetyl_prot_coverage$percent[i] <- length(which(hu_acetyl_filtered$precursor_mz > acetyl_prot_coverage$start_mz[i] &\n                                                  hu_acetyl_filtered$precursor_mz < acetyl_prot_coverage$stop_mz[i])) / nrow(hu_acetyl_filtered)\n}\n\n# Rendered table\nacetyl_prot_coverage%>% \n  select(-index) %>% \n  kable() %>% \n  kable_styling(bootstrap_options = c(\"striped\", \"hover\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> start_mz </th>\n   <th style=\"text-align:right;\"> stop_mz </th>\n   <th style=\"text-align:right;\"> percent </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 300 </td>\n   <td style=\"text-align:right;\"> 900 </td>\n   <td style=\"text-align:right;\"> 0.5384447 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 400 </td>\n   <td style=\"text-align:right;\"> 1000 </td>\n   <td style=\"text-align:right;\"> 0.5905586 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 500 </td>\n   <td style=\"text-align:right;\"> 1100 </td>\n   <td style=\"text-align:right;\"> 0.5695025 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 600 </td>\n   <td style=\"text-align:right;\"> 1200 </td>\n   <td style=\"text-align:right;\"> 0.5160668 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 700 </td>\n   <td style=\"text-align:right;\"> 1300 </td>\n   <td style=\"text-align:right;\"> 0.4579973 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 800 </td>\n   <td style=\"text-align:right;\"> 1400 </td>\n   <td style=\"text-align:right;\"> 0.3993898 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 900 </td>\n   <td style=\"text-align:right;\"> 1500 </td>\n   <td style=\"text-align:right;\"> 0.3460195 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1000 </td>\n   <td style=\"text-align:right;\"> 1600 </td>\n   <td style=\"text-align:right;\"> 0.2984127 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1100 </td>\n   <td style=\"text-align:right;\"> 1700 </td>\n   <td style=\"text-align:right;\"> 0.2543409 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1200 </td>\n   <td style=\"text-align:right;\"> 1800 </td>\n   <td style=\"text-align:right;\"> 0.2165974 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmz1 <- 640\nmz2 <- 650\n\n# Human proteome (Trypsin)\ng1 <- ggplot(hu_prot %>% filter(precursor_mz >= mz1 & precursor_mz <= mz2)) +\n  geom_histogram(aes(x = precursor_mz), binwidth = 0.025, color = \"black\", fill = \"grey80\") +\n  geom_vline(data = optimal_windows_proteome %>% filter(start_mz >= mz1 & start_mz <= mz2), \n             aes(xintercept = start_mz), color = \"black\") +\n  theme_bw(base_size = 14) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Tryptic Proteome\",\n         subtitle = \"in silico digest\",\n         x = \"Precursor m/z\")\n\n# Acetyl proteome (Arg-C)\ng2 <- ggplot(hu_acetyl %>% filter(precursor_mz >= mz1 & precursor_mz <= mz2)) +\n  geom_histogram(aes(x = precursor_mz, fill = isotope), binwidth = 0.025, color = \"black\") +\n  geom_vline(data = optimal_windows_proteome %>% filter(start_mz >= mz1 & start_mz <= mz2), \n             aes(xintercept = start_mz), color = \"black\") +\n  theme_bw(base_size = 14) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Acetyl Proteome\",\n         subtitle = \"in silico digest\",\n         x = \"Precursor m/z\")\n\n# Acetyl Spectral library\ng3 <- ggplot(ack_speclib %>% filter(PrecursorMz >= mz1 & PrecursorMz <= mz2, PrecursorCharge < 4)) +\n  geom_histogram(aes(x = PrecursorMz), binwidth = 0.025, fill = \"#2b8cbe\", color = \"black\") +\n  geom_vline(data = optimal_windows_proteome %>% filter(start_mz >= mz1 & start_mz <= mz2), \n             aes(xintercept = start_mz), color = \"black\") +\n  theme_bw(base_size = 14) +\n  scale_x_continuous(n.breaks = 10) +\n    labs(title = \"Acetyl Spectral library\",\n         subtitle = \"Baeza et.al. JPR 2020\",\n         fill = \"Charge\",\n         x = \"Precursor m/z\")\n\n# Rendering all three plots\ng1 / g2 / g3 + plot_annotation(title = 'DIA Window placement')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}